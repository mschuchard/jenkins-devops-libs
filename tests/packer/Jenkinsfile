// for dynamic retrieval
library identifier: 'jenkins-devops-libs@master', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: 'https://github.com/mschuchard/jenkins-devops-libs.git'])
// if added in Jenkins global config shared libraries
//@Library('jenkins-devops-libs')_
// if added in Jenkins global config shared libraries and the github api plugin is bugging out and slamming github with requests
//library('jenkins-devops-libs')_

pipeline {
  agent { docker { image 'hashicorp/packer:1.9' } }

  stages {
    stage('Init') {
      steps {
        sh 'curl -L https://raw.githubusercontent.com/mschuchard/jenkins-devops-libs/master/tests/packer/docker.pkr.json -o docker.pkr.json'
        sh 'curl -L https://raw.githubusercontent.com/mschuchard/jenkins-devops-libs/master/tests/packer/docker.pkr.hcl -o docker.pkr.hcl'

        script {
          packer.init(dir: '.')
        }
      }
    }
    stage('Parse') {
      steps {
        script {
          parsedMap = packer.parse('docker.pkr.hcl')
        }
      }
    }
    stage('Plugins') {
      steps {
        script {
          packer.plugins(command: 'installed')
          packer.plugins(
            command: 'required',
            dir:     '.'
          )
        }
      }
    }
    stage('Validate') {
      steps {
        script {
          packer.validate(template: 'docker.pkr.json')
          packer.validate(template: 'docker.pkr.hcl')
        }
      }
    }
    stage('Format') {
      steps {
        script {
          packer.fmt(
            check:    true,
            diff:     true,
            template: '.'
          )
        }
      }
    }
    stage('Inspect') {
      steps {
        script {
          packer.inspect('docker.pkr.json')
          packer.inspect('docker.pkr.hcl')
        }
      }
    }
    stage('Build') {
      steps {
        script {
          packer.build(template: 'docker.pkr.json')
          packer.build(template: 'docker.pkr.hcl')
        }
      }
    }
  }
}
