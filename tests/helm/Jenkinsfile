// for dynamic retrieval
library identifier: 'jenkins-devops-libs@master', retriever: modernSCM(
  [$class: 'GitSCMSource',
   remote: 'https://github.com/mschuchard/jenkins-devops-libs.git'])
// if added in Jenkins global config shared libraries
//@Library('jenkins-devops-libs')_
// if added in Jenkins global config shared libraries and the github api plugin is bugging out and slamming github with requests
//library('jenkins-devops-libs')_

pipeline {
  agent { docker { image 'alpine/helm:3.13.3' } }

  environment { KUBECONFIG = '/home/vagrant/.kube/config' }

  stages {
    stage('Plugin') {
      steps {
        script {
          helm.plugin(
            command: 'install', // plugin command; one of 'install', 'list', 'uninstall', or 'update'
            plugin:  'https://github.com/adamreese/helm-env' // targeted plugin (unless 'list' command)
          )
        }
      }
    }
    stage('Repo') {
      steps {
        script {
          helm.repo(
            repo: 'stable',
            url:  'https://charts.helm.sh/stable'
          )
        }
      }
    }
    stage('Show') {
      steps {
        script {
          helm.show(
            chart: 'stable/mariadb', // chart repository, local archive, directory, or url to display
            info:  'all', // info to display; one of 'all', 'chart', 'readme', or 'values'
          )
        }
      }
    }
    stage('Lint') {
      steps {
        script {
          helm.lint(chart: 'stable/mariadb' // chart repository, local archive, directory, or url to install
          )
        }
      }
    }
    stage('Verify') {
      steps {
        script {
          Boolean success = helm.verify(chartPath: '/tmp')
        }
      }
    }
    stage('Install') {
      steps {
        script {
          helm.install(
            chart: 'stable/mariadb', // chart repository, local archive, directory, or url to install
            name:  'happy-panda' // name for the installed release object
          )
        }
      }
    }
    stage('Upgrade') {
      steps {
        script {
          helm.upgrade(
            chart:     'stable/mariadb', // chart repository, local archive, directory, or url to upgrade
            install:   false, // optional install if release not already present
            name:      'happy-panda', // name of the upgraded release object
          )
        }
      }
    }
    stage('Status') {
      steps {
        script {
          helm.status(name: 'happy-panda')
        }
      }
    }
    stage('Rollback') {
      steps {
        script {
          helm.rollback(
            name:    'happy-panda', // release object name to rollback
            version: '1' // version of release-object to rollback to
          )
        }
      }
    }
    stage('Test') {
      steps {
        script {
          helm.test(
            chart:   'stable/mariadb', // chart repository, local archive, directory, or url to install
            kubectl: '/usr/bin/kubectl', // optional executable path for kubectl
            name:    'happy-panda' // name of a deployed release
          )
        }
      }
    }
    stage('Uninstall') {
      steps {
        script {
          helm.uninstall(name: 'happy-panda')
        }
      }
    }
    stage('History') {
      steps {
        script {
          helm.history)name: 'happy-panda'
        }
      }
    }
  }
}
